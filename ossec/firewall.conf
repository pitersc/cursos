input {
	file {
	    path => "/var/log/prueba.log"
	    type => "firewall"
	}
}
 
 
		
		
filter {
    # IPTABLES
    if [type] == "firewall" {
		grok {
                match => { "message" => "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:host} kernel: .* RULE %{INT:regla} -- %{WORD:accion} *(IN=(%{WORD:in_device})?)? *(OUT=(%{WORD:out_device})?) *(%{COMMONMAC:dst_mac}:%{COMMONMAC:src_mac}:(?:(?:[A-Fa-f0-9]{2}):(?:[A-Fa-f0-9]{2})))? SRC=(%{IP:src_ip})? DST=(%{IP:dst_ip})? LEN=%{INT:pkt_length} *(TOS=%{BASE16NUM:pkt_tos})? *(PREC=%{BASE16NUM:pkt_prec})? *(TTL=%{INT:pkt_ttl})? *(ID=%{INT:pkt_id})? (?:DF)* PROTO=%{WORD:protocol} SPT=%{INT:src_port} DPT=%{INT:dst_port} LEN=%{INT:ppt_length}"}
                #patterns_dir => ["/var/lib/logstash/etc"]
        }
		if "_grokparsefailure" in [tags] {
			grok {
				patterns_dir => "/opt/logstash/vendor/bundle/jruby/1.9/gems/logstash-patterns-core-2.0.5/patterns/"
				match=>["message","(?<content>(.|\r|\n)*)"]
				}
		}
    }
}
 
output {
    if [type] == "firewall" {
        elasticsearch {
            hosts => "192.168.0.36"
            index => "fw-%{+YYYY.MM.dd.HH}"
        }
    }
}
